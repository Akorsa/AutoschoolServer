package rmi;

import java.rmi.Remote;
import java.rmi.RemoteException;
import java.sql.Timestamp;
import java.util.Collection;
import java.util.Date;
import java.util.List;

import beans.Avto;

import beans.Answers;
import beans.Categories;
import beans.Drivingschedule;
import beans.Educationtypes;
import beans.Groups;
import beans.LinkTeacherSubject;
import beans.Questions;
import beans.Schedules;
import beans.Students;
import beans.Subjects;
import beans.Teachers;
import beans.Tests;
import beans.Themes;
import beans.TypeEducation;
import beans.TypeUser;
import beans.Users;
import beans.YearOfEducation;


public interface AutoschoolRmiInterface extends Remote {
	
	public Collection<Categories> getCategoryList() throws RemoteException;
	public Collection<YearOfEducation> getYearOfEducation() throws RemoteException;
	public Collection<Groups> getGroupList() throws RemoteException;
	public List<Groups> getGroupYearEdu(String year) throws RemoteException;
	public List<Students> getStudentsFromGroup(int groupid) throws RemoteException;	
	public List<TypeEducation> getTypeEducation() throws RemoteException;	
	public void insertStudent(Students s)throws RemoteException;	
	public void updateStudent(Students s)throws RemoteException;
	public void deleteBet(Students s)throws RemoteException;
	public void updateStGr(Groups gr, int id)throws RemoteException;
	public List<Educationtypes> getEducationtypes() throws RemoteException;	
	public void insertGrup(Groups g)throws RemoteException;
	public void updateGrup(Groups s1)throws RemoteException;
	public void deleteBet(Groups s)throws RemoteException;
	public List<Students> searchStudByFIO(String[] s)throws RemoteException;
	public List<Students> searchStudByNomSvid(String s)throws RemoteException;
	public List<Students> searchStudByDate(Date d)throws RemoteException;
	public List<Teachers> getTeacherList()throws RemoteException;
	public void insertPrepod(Teachers g)throws RemoteException;
	public void updateTeachers(Teachers s1)throws RemoteException;
	public void deleteTeacher(Teachers s)throws RemoteException;
	public List<Teachers> getMastersList() throws RemoteException;
	public List<Avto> getAvtoList() throws RemoteException;
	public void insertAvto(Avto g)throws RemoteException;
	public void updateAvto(Avto s1)throws RemoteException;
	public void deleteAvto(Avto s)throws RemoteException;
	public void insertCateg(Categories g)throws RemoteException;
	public void updateCateg(Categories s1)throws RemoteException;
	public void deleteCateg(Categories s)throws RemoteException;
	public List<Subjects> getSubjectList()throws RemoteException;
	public void insertSubject(Subjects g)throws RemoteException;
	public void deleteSubject(Subjects s)throws RemoteException;
	public void updateSubject(Subjects s1)throws RemoteException;
	public List<Themes> getThemeList()throws RemoteException;
	public void deleteTheme(Themes s)throws RemoteException;
	public void updateTheme(Themes s1)throws RemoteException;
	public void insertTheme(Themes g)throws RemoteException;
	public List<Users> getUsersList()throws RemoteException;
	public List<TypeUser> getRolesList()throws RemoteException;
	public void insertUser(Users g)throws RemoteException;
	public void updateUser(Users s1)throws RemoteException;
	public void deleteUser(Users s)throws RemoteException;
	public void insertRole(TypeUser g) throws RemoteException;
	public void updateRole(TypeUser s1) throws RemoteException;
	public void deleteRole(TypeUser s) throws RemoteException;
	public List<Answers> getAnswersByQID(int id)throws RemoteException;
	public List<Questions> getQuestList()throws RemoteException;
	public void deleteQuestion(Questions s)throws RemoteException;
	public void updateQuestion(Questions g)throws RemoteException;
	public void insertQuestion(Questions g)throws RemoteException;
	public void insertAnswers(List<Answers> a)throws RemoteException;
	public void updateAnswers(List<Answers> a)throws RemoteException;
	public Questions getQuestById(int id)throws RemoteException;
	List<Students> getStudentsFromGroup2(int groupid) throws RemoteException;
	public List<Schedules> getRaspList(int i, Date date, Date date2)throws RemoteException;
	public List<Themes> getThemeListBySubj(int id)throws RemoteException;
	public void insertRasp(Schedules g)throws RemoteException;
	public void updateRasp(Schedules sh)throws RemoteException;
	public void deleteRasp(Schedules s)throws RemoteException;
	public List<Users> getUsersByLogin(String text)throws RemoteException;
	public TypeUser getTypeUserById(int i)throws RemoteException;
	//public Users getUserByLogin(String login) throws RemoteException;
	public List<Questions> getQuestionsByTheme(int id)throws RemoteException;
	public Students getStudentByUser(int id)throws RemoteException;
	public List<Subjects> getSubjectByName(String string)throws RemoteException;
	public List<LinkTeacherSubject> getZakrList()throws RemoteException;
	public void insertZakr(LinkTeacherSubject g)throws RemoteException;
	public void deleteZakr(LinkTeacherSubject s)throws RemoteException;
	public void updateZakr(LinkTeacherSubject s1)throws RemoteException;
	public List<LinkTeacherSubject> getZakrByTeacher(Teachers teacher)throws RemoteException;
	public Themes getThemeById(int themeId)throws RemoteException;
	public YearOfEducation getYearById(int yearOfEducationId)throws RemoteException;
	public List<Groups> getCurrentGroupList()throws RemoteException;
	public List<Questions> getQuestByLvl(double level)throws RemoteException;
	public void addTest(Tests test)throws RemoteException;
	public List<Drivingschedule> getDriveList(int groupid, Date date, Date date2)throws RemoteException;
	public void insertDrive(Drivingschedule sh)throws RemoteException;
	public void updateDrive(Drivingschedule sh)throws RemoteException;
	public void deleteDrive(Drivingschedule s)throws RemoteException;
	public List<Drivingschedule> getDriveByTeacherAndTime(int teacherid,Date dt1,Date dt2)throws RemoteException;
	public List<Avto> getAvtoByTime(Date dt, Date dt2) throws RemoteException;
	public List<Avto> getAvtoByTime2(Date dt, Date dt2) throws RemoteException;
	public List getDriveStat(int id, Date t1, Date t2) throws RemoteException;
	public List<Tests> getStudStat(int idstudent)throws RemoteException;
	public List<Students> getSvid()throws RemoteException;
	public List<Integer> getHours(int id) throws RemoteException;

}
